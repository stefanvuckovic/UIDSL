/**
 * generated by Xtext 2.10.0
 */
package com.stefanvuckovic.dto.dTO.impl;

import com.stefanvuckovic.domainmodel.domainModel.DomainModelPackage;

import com.stefanvuckovic.dto.dTO.DTOClass;
import com.stefanvuckovic.dto.dTO.DTOFactory;
import com.stefanvuckovic.dto.dTO.DTOModel;
import com.stefanvuckovic.dto.dTO.DTOPackage;
import com.stefanvuckovic.dto.dTO.EmailType;
import com.stefanvuckovic.dto.dTO.FileType;
import com.stefanvuckovic.dto.dTO.ImageType;
import com.stefanvuckovic.dto.dTO.ObjectRepresentation;
import com.stefanvuckovic.dto.dTO.PasswordType;
import com.stefanvuckovic.dto.dTO.TextType;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DTOPackageImpl extends EPackageImpl implements DTOPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dtoModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dtoClassEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass objectRepresentationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass textTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass emailTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass passwordTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fileTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass imageTypeEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see com.stefanvuckovic.dto.dTO.DTOPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DTOPackageImpl()
  {
    super(eNS_URI, DTOFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link DTOPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DTOPackage init()
  {
    if (isInited) return (DTOPackage)EPackage.Registry.INSTANCE.getEPackage(DTOPackage.eNS_URI);

    // Obtain or create and register package
    DTOPackageImpl theDTOPackage = (DTOPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof DTOPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new DTOPackageImpl());

    isInited = true;

    // Initialize simple dependencies
    DomainModelPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theDTOPackage.createPackageContents();

    // Initialize created meta-data
    theDTOPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDTOPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DTOPackage.eNS_URI, theDTOPackage);
    return theDTOPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDTOModel()
  {
    return dtoModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDTOModel_Concepts()
  {
    return (EReference)dtoModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDTOClass()
  {
    return dtoClassEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDTOClass_SuperType()
  {
    return (EReference)dtoClassEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getObjectRepresentation()
  {
    return objectRepresentationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTextType()
  {
    return textTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEmailType()
  {
    return emailTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPasswordType()
  {
    return passwordTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFileType()
  {
    return fileTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImageType()
  {
    return imageTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DTOFactory getDTOFactory()
  {
    return (DTOFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    dtoModelEClass = createEClass(DTO_MODEL);
    createEReference(dtoModelEClass, DTO_MODEL__CONCEPTS);

    dtoClassEClass = createEClass(DTO_CLASS);
    createEReference(dtoClassEClass, DTO_CLASS__SUPER_TYPE);

    objectRepresentationEClass = createEClass(OBJECT_REPRESENTATION);

    textTypeEClass = createEClass(TEXT_TYPE);

    emailTypeEClass = createEClass(EMAIL_TYPE);

    passwordTypeEClass = createEClass(PASSWORD_TYPE);

    fileTypeEClass = createEClass(FILE_TYPE);

    imageTypeEClass = createEClass(IMAGE_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    DomainModelPackage theDomainModelPackage = (DomainModelPackage)EPackage.Registry.INSTANCE.getEPackage(DomainModelPackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    dtoClassEClass.getESuperTypes().add(theDomainModelPackage.getConcept());
    objectRepresentationEClass.getESuperTypes().add(theDomainModelPackage.getAttributeOption());
    textTypeEClass.getESuperTypes().add(theDomainModelPackage.getBasicType());
    emailTypeEClass.getESuperTypes().add(theDomainModelPackage.getBasicType());
    passwordTypeEClass.getESuperTypes().add(theDomainModelPackage.getBasicType());
    fileTypeEClass.getESuperTypes().add(theDomainModelPackage.getBasicType());
    imageTypeEClass.getESuperTypes().add(theDomainModelPackage.getBasicType());

    // Initialize classes and features; add operations and parameters
    initEClass(dtoModelEClass, DTOModel.class, "DTOModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDTOModel_Concepts(), theDomainModelPackage.getConcept(), null, "concepts", null, 0, -1, DTOModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dtoClassEClass, DTOClass.class, "DTOClass", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDTOClass_SuperType(), this.getDTOClass(), null, "superType", null, 0, 1, DTOClass.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(objectRepresentationEClass, ObjectRepresentation.class, "ObjectRepresentation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(textTypeEClass, TextType.class, "TextType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(emailTypeEClass, EmailType.class, "EmailType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(passwordTypeEClass, PasswordType.class, "PasswordType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fileTypeEClass, FileType.class, "FileType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(imageTypeEClass, ImageType.class, "ImageType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //DTOPackageImpl
