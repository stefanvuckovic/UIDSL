/**
 * generated by Xtext 2.10.0
 */
package com.stefanvuckovic.uidsl.uIDSL.impl;

import com.stefanvuckovic.uidsl.uIDSL.AllowedNestedComponents;
import com.stefanvuckovic.uidsl.uIDSL.ExistingNestedComponents;
import com.stefanvuckovic.uidsl.uIDSL.UIDSLPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Existing Nested Components</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.stefanvuckovic.uidsl.uIDSL.impl.ExistingNestedComponentsImpl#getNestedComponents <em>Nested Components</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExistingNestedComponentsImpl extends NestedComponentImpl implements ExistingNestedComponents
{
  /**
   * The cached value of the '{@link #getNestedComponents() <em>Nested Components</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNestedComponents()
   * @generated
   * @ordered
   */
  protected AllowedNestedComponents nestedComponents;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExistingNestedComponentsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UIDSLPackage.Literals.EXISTING_NESTED_COMPONENTS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AllowedNestedComponents getNestedComponents()
  {
    return nestedComponents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNestedComponents(AllowedNestedComponents newNestedComponents, NotificationChain msgs)
  {
    AllowedNestedComponents oldNestedComponents = nestedComponents;
    nestedComponents = newNestedComponents;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UIDSLPackage.EXISTING_NESTED_COMPONENTS__NESTED_COMPONENTS, oldNestedComponents, newNestedComponents);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNestedComponents(AllowedNestedComponents newNestedComponents)
  {
    if (newNestedComponents != nestedComponents)
    {
      NotificationChain msgs = null;
      if (nestedComponents != null)
        msgs = ((InternalEObject)nestedComponents).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UIDSLPackage.EXISTING_NESTED_COMPONENTS__NESTED_COMPONENTS, null, msgs);
      if (newNestedComponents != null)
        msgs = ((InternalEObject)newNestedComponents).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UIDSLPackage.EXISTING_NESTED_COMPONENTS__NESTED_COMPONENTS, null, msgs);
      msgs = basicSetNestedComponents(newNestedComponents, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UIDSLPackage.EXISTING_NESTED_COMPONENTS__NESTED_COMPONENTS, newNestedComponents, newNestedComponents));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UIDSLPackage.EXISTING_NESTED_COMPONENTS__NESTED_COMPONENTS:
        return basicSetNestedComponents(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UIDSLPackage.EXISTING_NESTED_COMPONENTS__NESTED_COMPONENTS:
        return getNestedComponents();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UIDSLPackage.EXISTING_NESTED_COMPONENTS__NESTED_COMPONENTS:
        setNestedComponents((AllowedNestedComponents)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UIDSLPackage.EXISTING_NESTED_COMPONENTS__NESTED_COMPONENTS:
        setNestedComponents((AllowedNestedComponents)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UIDSLPackage.EXISTING_NESTED_COMPONENTS__NESTED_COMPONENTS:
        return nestedComponents != null;
    }
    return super.eIsSet(featureID);
  }

} //ExistingNestedComponentsImpl
