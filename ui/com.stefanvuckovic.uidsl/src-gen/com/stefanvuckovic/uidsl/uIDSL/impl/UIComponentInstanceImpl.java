/**
 * generated by Xtext 2.10.0
 */
package com.stefanvuckovic.uidsl.uIDSL.impl;

import com.stefanvuckovic.uidsl.uIDSL.Component;
import com.stefanvuckovic.uidsl.uIDSL.PropertyValueInstance;
import com.stefanvuckovic.uidsl.uIDSL.UIComponent;
import com.stefanvuckovic.uidsl.uIDSL.UIComponentInstance;
import com.stefanvuckovic.uidsl.uIDSL.UIDSLPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>UI Component Instance</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.stefanvuckovic.uidsl.uIDSL.impl.UIComponentInstanceImpl#getComponent <em>Component</em>}</li>
 *   <li>{@link com.stefanvuckovic.uidsl.uIDSL.impl.UIComponentInstanceImpl#getProperties <em>Properties</em>}</li>
 *   <li>{@link com.stefanvuckovic.uidsl.uIDSL.impl.UIComponentInstanceImpl#getChildElements <em>Child Elements</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UIComponentInstanceImpl extends ComponentImpl implements UIComponentInstance
{
  /**
   * The cached value of the '{@link #getComponent() <em>Component</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponent()
   * @generated
   * @ordered
   */
  protected UIComponent component;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EList<PropertyValueInstance> properties;

  /**
   * The cached value of the '{@link #getChildElements() <em>Child Elements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChildElements()
   * @generated
   * @ordered
   */
  protected EList<Component> childElements;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UIComponentInstanceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UIDSLPackage.Literals.UI_COMPONENT_INSTANCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UIComponent getComponent()
  {
    if (component != null && component.eIsProxy())
    {
      InternalEObject oldComponent = (InternalEObject)component;
      component = (UIComponent)eResolveProxy(oldComponent);
      if (component != oldComponent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, UIDSLPackage.UI_COMPONENT_INSTANCE__COMPONENT, oldComponent, component));
      }
    }
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UIComponent basicGetComponent()
  {
    return component;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComponent(UIComponent newComponent)
  {
    UIComponent oldComponent = component;
    component = newComponent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UIDSLPackage.UI_COMPONENT_INSTANCE__COMPONENT, oldComponent, component));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<PropertyValueInstance> getProperties()
  {
    if (properties == null)
    {
      properties = new EObjectContainmentEList<PropertyValueInstance>(PropertyValueInstance.class, this, UIDSLPackage.UI_COMPONENT_INSTANCE__PROPERTIES);
    }
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Component> getChildElements()
  {
    if (childElements == null)
    {
      childElements = new EObjectContainmentEList<Component>(Component.class, this, UIDSLPackage.UI_COMPONENT_INSTANCE__CHILD_ELEMENTS);
    }
    return childElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UIDSLPackage.UI_COMPONENT_INSTANCE__PROPERTIES:
        return ((InternalEList<?>)getProperties()).basicRemove(otherEnd, msgs);
      case UIDSLPackage.UI_COMPONENT_INSTANCE__CHILD_ELEMENTS:
        return ((InternalEList<?>)getChildElements()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UIDSLPackage.UI_COMPONENT_INSTANCE__COMPONENT:
        if (resolve) return getComponent();
        return basicGetComponent();
      case UIDSLPackage.UI_COMPONENT_INSTANCE__PROPERTIES:
        return getProperties();
      case UIDSLPackage.UI_COMPONENT_INSTANCE__CHILD_ELEMENTS:
        return getChildElements();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UIDSLPackage.UI_COMPONENT_INSTANCE__COMPONENT:
        setComponent((UIComponent)newValue);
        return;
      case UIDSLPackage.UI_COMPONENT_INSTANCE__PROPERTIES:
        getProperties().clear();
        getProperties().addAll((Collection<? extends PropertyValueInstance>)newValue);
        return;
      case UIDSLPackage.UI_COMPONENT_INSTANCE__CHILD_ELEMENTS:
        getChildElements().clear();
        getChildElements().addAll((Collection<? extends Component>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UIDSLPackage.UI_COMPONENT_INSTANCE__COMPONENT:
        setComponent((UIComponent)null);
        return;
      case UIDSLPackage.UI_COMPONENT_INSTANCE__PROPERTIES:
        getProperties().clear();
        return;
      case UIDSLPackage.UI_COMPONENT_INSTANCE__CHILD_ELEMENTS:
        getChildElements().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UIDSLPackage.UI_COMPONENT_INSTANCE__COMPONENT:
        return component != null;
      case UIDSLPackage.UI_COMPONENT_INSTANCE__PROPERTIES:
        return properties != null && !properties.isEmpty();
      case UIDSLPackage.UI_COMPONENT_INSTANCE__CHILD_ELEMENTS:
        return childElements != null && !childElements.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //UIComponentInstanceImpl
