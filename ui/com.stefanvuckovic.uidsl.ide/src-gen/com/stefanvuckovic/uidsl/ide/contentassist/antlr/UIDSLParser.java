/*
 * generated by Xtext 2.10.0
 */
package com.stefanvuckovic.uidsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import com.stefanvuckovic.uidsl.ide.contentassist.antlr.internal.InternalUIDSLParser;
import com.stefanvuckovic.uidsl.services.UIDSLGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class UIDSLParser extends AbstractContentAssistParser {

	@Inject
	private UIDSLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalUIDSLParser createParser() {
		InternalUIDSLParser result = new InternalUIDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getUIConceptAccess().getAlternatives(), "rule__UIConcept__Alternatives");
					put(grammarAccess.getConceptAccess().getAlternatives(), "rule__Concept__Alternatives");
					put(grammarAccess.getMemberAccess().getAlternatives(), "rule__Member__Alternatives");
					put(grammarAccess.getUIContainerAccess().getAlternatives(), "rule__UIContainer__Alternatives");
					put(grammarAccess.getAtomExpressionAccess().getAlternatives(), "rule__AtomExpression__Alternatives");
					put(grammarAccess.getSelectionMemberAccess().getAlternatives(), "rule__SelectionMember__Alternatives");
					put(grammarAccess.getDTOConceptAccess().getAlternatives(), "superConcept__Alternatives");
					put(grammarAccess.getBasicTypeAccess().getAlternatives(), "rule__BasicType__Alternatives");
					put(grammarAccess.getConstantAccess().getAlternatives(), "rule__Constant__Alternatives");
					put(grammarAccess.getConstantAccess().getValueAlternatives_3_1_0(), "rule__Constant__ValueAlternatives_3_1_0");
					put(grammarAccess.getOptionAccess().getAlternatives(), "rule__Option__Alternatives");
					put(grammarAccess.getEntityOptionAccess().getAlternatives(), "rule__EntityOption__Alternatives");
					put(grammarAccess.getInheritanceMappingTypeAccess().getTypeAlternatives_0(), "rule__InheritanceMappingType__TypeAlternatives_0");
					put(grammarAccess.getAttributeTypeAccess().getAlternatives(), "rule__AttributeType__Alternatives");
					put(grammarAccess.getSingleTypeAccess().getAlternatives(), "rule__SingleType__Alternatives");
					put(grammarAccess.getDomainModelBasicTypeAccess().getAlternatives(), "superBasicType__Alternatives");
					put(grammarAccess.getAttributeOptionAccess().getAlternatives(), "rule__AttributeOption__Alternatives");
					put(grammarAccess.getCardinalityTypeAccess().getAlternatives(), "rule__CardinalityType__Alternatives");
					put(grammarAccess.getServerComponentAccess().getGroup(), "rule__ServerComponent__Group__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getMethodAccess().getGroup_3(), "rule__Method__Group_3__0");
					put(grammarAccess.getTypedConceptAccess().getGroup(), "rule__TypedConcept__Group__0");
					put(grammarAccess.getPageAccess().getGroup(), "rule__Page__Group__0");
					put(grammarAccess.getTemplateAccess().getGroup(), "rule__Template__Group__0");
					put(grammarAccess.getFragmentAccess().getGroup(), "rule__Fragment__Group__0");
					put(grammarAccess.getMemberSelectionExpressionAccess().getGroup(), "rule__MemberSelectionExpression__Group__0");
					put(grammarAccess.getMemberSelectionExpressionAccess().getGroup_1(), "rule__MemberSelectionExpression__Group_1__0");
					put(grammarAccess.getMemberSelectionExpressionAccess().getGroup_1_3(), "rule__MemberSelectionExpression__Group_1_3__0");
					put(grammarAccess.getMemberSelectionExpressionAccess().getGroup_1_3_1(), "rule__MemberSelectionExpression__Group_1_3_1__0");
					put(grammarAccess.getMemberSelectionExpressionAccess().getGroup_1_3_1_1(), "rule__MemberSelectionExpression__Group_1_3_1_1__0");
					put(grammarAccess.getAtomExpressionAccess().getGroup_1(), "rule__AtomExpression__Group_1__0");
					put(grammarAccess.getDTOClassAccess().getGroup(), "rule__DTOClass__Group__0");
					put(grammarAccess.getDTOClassAccess().getGroup_2(), "rule__DTOClass__Group_2__0");
					put(grammarAccess.getBasicTypeAccess().getGroup_1(), "rule__BasicType__Group_1__0");
					put(grammarAccess.getBasicTypeAccess().getGroup_2(), "rule__BasicType__Group_2__0");
					put(grammarAccess.getBasicTypeAccess().getGroup_3(), "rule__BasicType__Group_3__0");
					put(grammarAccess.getBasicTypeAccess().getGroup_4(), "rule__BasicType__Group_4__0");
					put(grammarAccess.getBasicTypeAccess().getGroup_5(), "rule__BasicType__Group_5__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getEntityAccess().getGroup_2(), "rule__Entity__Group_2__0");
					put(grammarAccess.getEntityAccess().getGroup_3(), "rule__Entity__Group_3__0");
					put(grammarAccess.getEntityAccess().getGroup_3_3(), "rule__Entity__Group_3_3__0");
					put(grammarAccess.getEnumAccess().getGroup(), "rule__Enum__Group__0");
					put(grammarAccess.getEnumLiteralAccess().getGroup(), "rule__EnumLiteral__Group__0");
					put(grammarAccess.getEnumLiteralAccess().getGroup_1(), "rule__EnumLiteral__Group_1__0");
					put(grammarAccess.getEnumLiteralAccess().getGroup_1_2(), "rule__EnumLiteral__Group_1_2__0");
					put(grammarAccess.getConstantAccess().getGroup_0(), "rule__Constant__Group_0__0");
					put(grammarAccess.getConstantAccess().getGroup_1(), "rule__Constant__Group_1__0");
					put(grammarAccess.getConstantAccess().getGroup_2(), "rule__Constant__Group_2__0");
					put(grammarAccess.getConstantAccess().getGroup_3(), "rule__Constant__Group_3__0");
					put(grammarAccess.getConstantAccess().getGroup_4(), "rule__Constant__Group_4__0");
					put(grammarAccess.getConstantAccess().getGroup_5(), "rule__Constant__Group_5__0");
					put(grammarAccess.getEntityOptionAccess().getGroup_0(), "rule__EntityOption__Group_0__0");
					put(grammarAccess.getEntityOptionAccess().getGroup_1(), "rule__EntityOption__Group_1__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getAttributeAccess().getGroup_2(), "rule__Attribute__Group_2__0");
					put(grammarAccess.getAttributeAccess().getGroup_2_1(), "rule__Attribute__Group_2_1__0");
					put(grammarAccess.getDomainModelBasicTypeAccess().getGroup_0(), "superBasicType__Group_0__0");
					put(grammarAccess.getDomainModelBasicTypeAccess().getGroup_1(), "superBasicType__Group_1__0");
					put(grammarAccess.getDomainModelBasicTypeAccess().getGroup_2(), "superBasicType__Group_2__0");
					put(grammarAccess.getDomainModelBasicTypeAccess().getGroup_3(), "superBasicType__Group_3__0");
					put(grammarAccess.getDomainModelBasicTypeAccess().getGroup_4(), "superBasicType__Group_4__0");
					put(grammarAccess.getCollectionTypeAccess().getGroup(), "rule__CollectionType__Group__0");
					put(grammarAccess.getAttributeOptionAccess().getGroup_0(), "rule__AttributeOption__Group_0__0");
					put(grammarAccess.getAttributeOptionAccess().getGroup_1(), "rule__AttributeOption__Group_1__0");
					put(grammarAccess.getAttributeOptionAccess().getGroup_2(), "rule__AttributeOption__Group_2__0");
					put(grammarAccess.getAttributeOptionAccess().getGroup_3(), "rule__AttributeOption__Group_3__0");
					put(grammarAccess.getStaticFieldSelectionAccess().getGroup(), "rule__StaticFieldSelection__Group__0");
					put(grammarAccess.getDumbSelectionMemberAccess().getGroup(), "rule__DumbSelectionMember__Group__0");
					put(grammarAccess.getUIModelAccess().getConceptsAssignment(), "rule__UIModel__ConceptsAssignment");
					put(grammarAccess.getServerComponentAccess().getNameAssignment_1(), "rule__ServerComponent__NameAssignment_1");
					put(grammarAccess.getServerComponentAccess().getMembersAssignment_3(), "rule__ServerComponent__MembersAssignment_3");
					put(grammarAccess.getServerComponentAccess().getExpressionsAssignment_4(), "rule__ServerComponent__ExpressionsAssignment_4");
					put(grammarAccess.getMethodAccess().getParamsAssignment_2(), "rule__Method__ParamsAssignment_2");
					put(grammarAccess.getMethodAccess().getParamsAssignment_3_1(), "rule__Method__ParamsAssignment_3_1");
					put(grammarAccess.getTypedConceptAccess().getTypeAssignment_0(), "rule__TypedConcept__TypeAssignment_0");
					put(grammarAccess.getTypedConceptAccess().getNameAssignment_1(), "rule__TypedConcept__NameAssignment_1");
					put(grammarAccess.getPageAccess().getNameAssignment_1(), "rule__Page__NameAssignment_1");
					put(grammarAccess.getTemplateAccess().getNameAssignment_1(), "rule__Template__NameAssignment_1");
					put(grammarAccess.getFragmentAccess().getNameAssignment_1(), "rule__Fragment__NameAssignment_1");
					put(grammarAccess.getMemberSelectionExpressionAccess().getMemberAssignment_1_2(), "rule__MemberSelectionExpression__MemberAssignment_1_2");
					put(grammarAccess.getMemberSelectionExpressionAccess().getIsMethodAssignment_1_3_0(), "rule__MemberSelectionExpression__IsMethodAssignment_1_3_0");
					put(grammarAccess.getMemberSelectionExpressionAccess().getParamsAssignment_1_3_1_0(), "rule__MemberSelectionExpression__ParamsAssignment_1_3_1_0");
					put(grammarAccess.getMemberSelectionExpressionAccess().getParamsAssignment_1_3_1_1_1(), "rule__MemberSelectionExpression__ParamsAssignment_1_3_1_1_1");
					put(grammarAccess.getAtomExpressionAccess().getRefAssignment_1_1(), "rule__AtomExpression__RefAssignment_1_1");
					put(grammarAccess.getDTOModelAccess().getConceptsAssignment(), "rule__DTOModel__ConceptsAssignment");
					put(grammarAccess.getDTOClassAccess().getNameAssignment_1(), "rule__DTOClass__NameAssignment_1");
					put(grammarAccess.getDTOClassAccess().getSuperTypeAssignment_2_1(), "rule__DTOClass__SuperTypeAssignment_2_1");
					put(grammarAccess.getDTOClassAccess().getAttributesAssignment_4(), "rule__DTOClass__AttributesAssignment_4");
					put(grammarAccess.getModelAccess().getConceptsAssignment(), "rule__Model__ConceptsAssignment");
					put(grammarAccess.getEntityAccess().getNameAssignment_1(), "rule__Entity__NameAssignment_1");
					put(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1(), "rule__Entity__SuperTypeAssignment_2_1");
					put(grammarAccess.getEntityAccess().getOptionsAssignment_3_2(), "rule__Entity__OptionsAssignment_3_2");
					put(grammarAccess.getEntityAccess().getOptionsAssignment_3_3_1(), "rule__Entity__OptionsAssignment_3_3_1");
					put(grammarAccess.getEntityAccess().getAttributesAssignment_5(), "rule__Entity__AttributesAssignment_5");
					put(grammarAccess.getEnumAccess().getNameAssignment_1(), "rule__Enum__NameAssignment_1");
					put(grammarAccess.getEnumAccess().getAttributesAssignment_3(), "rule__Enum__AttributesAssignment_3");
					put(grammarAccess.getEnumAccess().getLiteralsAssignment_4(), "rule__Enum__LiteralsAssignment_4");
					put(grammarAccess.getEnumLiteralAccess().getNameAssignment_0(), "rule__EnumLiteral__NameAssignment_0");
					put(grammarAccess.getEnumLiteralAccess().getParamsAssignment_1_1(), "rule__EnumLiteral__ParamsAssignment_1_1");
					put(grammarAccess.getEnumLiteralAccess().getParamsAssignment_1_2_1(), "rule__EnumLiteral__ParamsAssignment_1_2_1");
					put(grammarAccess.getConstantAccess().getValueAssignment_0_1(), "rule__Constant__ValueAssignment_0_1");
					put(grammarAccess.getConstantAccess().getValueAssignment_1_1(), "rule__Constant__ValueAssignment_1_1");
					put(grammarAccess.getConstantAccess().getValueAssignment_2_1(), "rule__Constant__ValueAssignment_2_1");
					put(grammarAccess.getConstantAccess().getValueAssignment_3_1(), "rule__Constant__ValueAssignment_3_1");
					put(grammarAccess.getConstantAccess().getDayAssignment_4_1(), "rule__Constant__DayAssignment_4_1");
					put(grammarAccess.getConstantAccess().getMonthAssignment_4_3(), "rule__Constant__MonthAssignment_4_3");
					put(grammarAccess.getConstantAccess().getYearAssignment_4_5(), "rule__Constant__YearAssignment_4_5");
					put(grammarAccess.getEntityOptionAccess().getDeleteByFlagAssignment_0_1(), "rule__EntityOption__DeleteByFlagAssignment_0_1");
					put(grammarAccess.getEntityOptionAccess().getInheritanceMappingAssignment_1_3(), "rule__EntityOption__InheritanceMappingAssignment_1_3");
					put(grammarAccess.getInheritanceMappingTypeAccess().getTypeAssignment(), "rule__InheritanceMappingType__TypeAssignment");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_0(), "rule__Attribute__TypeAssignment_0");
					put(grammarAccess.getAttributeAccess().getNameAssignment_1(), "rule__Attribute__NameAssignment_1");
					put(grammarAccess.getAttributeAccess().getOptionsAssignment_2_0(), "rule__Attribute__OptionsAssignment_2_0");
					put(grammarAccess.getAttributeAccess().getOptionsAssignment_2_1_1(), "rule__Attribute__OptionsAssignment_2_1_1");
					put(grammarAccess.getRefTypeAccess().getReferenceAssignment(), "rule__RefType__ReferenceAssignment");
					put(grammarAccess.getCollectionTypeAccess().getOfTypeAssignment_2(), "rule__CollectionType__OfTypeAssignment_2");
					put(grammarAccess.getAttributeOptionAccess().getRequiredAssignment_0_1(), "rule__AttributeOption__RequiredAssignment_0_1");
					put(grammarAccess.getAttributeOptionAccess().getPartOfAssignment_1_1(), "rule__AttributeOption__PartOfAssignment_1_1");
					put(grammarAccess.getAttributeOptionAccess().getRelationshipOwnerAssignment_2_3(), "rule__AttributeOption__RelationshipOwnerAssignment_2_3");
					put(grammarAccess.getAttributeOptionAccess().getCardAssignment_3_3(), "rule__AttributeOption__CardAssignment_3_3");
					put(grammarAccess.getStaticFieldSelectionAccess().getReceiverAssignment_0(), "rule__StaticFieldSelection__ReceiverAssignment_0");
					put(grammarAccess.getStaticFieldSelectionAccess().getMemberAssignment_2(), "rule__StaticFieldSelection__MemberAssignment_2");
					put(grammarAccess.getDumbSelectionMemberAccess().getTypeAssignment_1(), "rule__DumbSelectionMember__TypeAssignment_1");
					put(grammarAccess.getDumbSelectionMemberAccess().getNameAssignment_2(), "rule__DumbSelectionMember__NameAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalUIDSLParser typedParser = (InternalUIDSLParser) parser;
			typedParser.entryRuleUIModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public UIDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(UIDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
