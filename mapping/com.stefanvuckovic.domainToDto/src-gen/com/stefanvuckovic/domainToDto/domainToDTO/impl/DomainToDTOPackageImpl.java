/**
 * generated by Xtext 2.10.0
 */
package com.stefanvuckovic.domainToDto.domainToDTO.impl;

import com.stefanvuckovic.domainToDto.domainToDTO.AtomExpression;
import com.stefanvuckovic.domainToDto.domainToDTO.DomainToDTOFactory;
import com.stefanvuckovic.domainToDto.domainToDTO.DomainToDTOPackage;
import com.stefanvuckovic.domainToDto.domainToDTO.EntityMappingExpression;
import com.stefanvuckovic.domainToDto.domainToDTO.MappedAttribute;
import com.stefanvuckovic.domainToDto.domainToDTO.Mapper;
import com.stefanvuckovic.domainToDto.domainToDTO.MappingModel;
import com.stefanvuckovic.domainToDto.domainToDTO.MemberSelectionExpression;
import com.stefanvuckovic.domainToDto.domainToDTO.StaticEntityRef;

import com.stefanvuckovic.domainmodel.domainModel.DomainModelPackage;

import com.stefanvuckovic.dto.dTO.DTOPackage;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DomainToDTOPackageImpl extends EPackageImpl implements DomainToDTOPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mappingModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mapperEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mappedAttributeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityMappingExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass atomExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass memberSelectionExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass staticEntityRefEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see com.stefanvuckovic.domainToDto.domainToDTO.DomainToDTOPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DomainToDTOPackageImpl()
  {
    super(eNS_URI, DomainToDTOFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link DomainToDTOPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DomainToDTOPackage init()
  {
    if (isInited) return (DomainToDTOPackage)EPackage.Registry.INSTANCE.getEPackage(DomainToDTOPackage.eNS_URI);

    // Obtain or create and register package
    DomainToDTOPackageImpl theDomainToDTOPackage = (DomainToDTOPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof DomainToDTOPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new DomainToDTOPackageImpl());

    isInited = true;

    // Initialize simple dependencies
    DTOPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theDomainToDTOPackage.createPackageContents();

    // Initialize created meta-data
    theDomainToDTOPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDomainToDTOPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DomainToDTOPackage.eNS_URI, theDomainToDTOPackage);
    return theDomainToDTOPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMappingModel()
  {
    return mappingModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMappingModel_Mappers()
  {
    return (EReference)mappingModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMapper()
  {
    return mapperEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMapper_Name()
  {
    return (EAttribute)mapperEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMapper_Dto()
  {
    return (EReference)mapperEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMapper_Attributes()
  {
    return (EReference)mapperEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMappedAttribute()
  {
    return mappedAttributeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMappedAttribute_Attr()
  {
    return (EReference)mappedAttributeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMappedAttribute_Mapping()
  {
    return (EReference)mappedAttributeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEntityMappingExpression()
  {
    return entityMappingExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEntityMappingExpression_MappedEntity()
  {
    return (EReference)entityMappingExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEntityMappingExpression_Mapper()
  {
    return (EReference)entityMappingExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAtomExpression()
  {
    return atomExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMemberSelectionExpression()
  {
    return memberSelectionExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMemberSelectionExpression_Receiver()
  {
    return (EReference)memberSelectionExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMemberSelectionExpression_Member()
  {
    return (EReference)memberSelectionExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStaticEntityRef()
  {
    return staticEntityRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getStaticEntityRef_Reference()
  {
    return (EReference)staticEntityRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DomainToDTOFactory getDomainToDTOFactory()
  {
    return (DomainToDTOFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    mappingModelEClass = createEClass(MAPPING_MODEL);
    createEReference(mappingModelEClass, MAPPING_MODEL__MAPPERS);

    mapperEClass = createEClass(MAPPER);
    createEAttribute(mapperEClass, MAPPER__NAME);
    createEReference(mapperEClass, MAPPER__DTO);
    createEReference(mapperEClass, MAPPER__ATTRIBUTES);

    mappedAttributeEClass = createEClass(MAPPED_ATTRIBUTE);
    createEReference(mappedAttributeEClass, MAPPED_ATTRIBUTE__ATTR);
    createEReference(mappedAttributeEClass, MAPPED_ATTRIBUTE__MAPPING);

    entityMappingExpressionEClass = createEClass(ENTITY_MAPPING_EXPRESSION);
    createEReference(entityMappingExpressionEClass, ENTITY_MAPPING_EXPRESSION__MAPPED_ENTITY);
    createEReference(entityMappingExpressionEClass, ENTITY_MAPPING_EXPRESSION__MAPPER);

    atomExpressionEClass = createEClass(ATOM_EXPRESSION);

    memberSelectionExpressionEClass = createEClass(MEMBER_SELECTION_EXPRESSION);
    createEReference(memberSelectionExpressionEClass, MEMBER_SELECTION_EXPRESSION__RECEIVER);
    createEReference(memberSelectionExpressionEClass, MEMBER_SELECTION_EXPRESSION__MEMBER);

    staticEntityRefEClass = createEClass(STATIC_ENTITY_REF);
    createEReference(staticEntityRefEClass, STATIC_ENTITY_REF__REFERENCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    DTOPackage theDTOPackage = (DTOPackage)EPackage.Registry.INSTANCE.getEPackage(DTOPackage.eNS_URI);
    DomainModelPackage theDomainModelPackage = (DomainModelPackage)EPackage.Registry.INSTANCE.getEPackage(DomainModelPackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    entityMappingExpressionEClass.getESuperTypes().add(theDomainModelPackage.getExpression());
    atomExpressionEClass.getESuperTypes().add(theDomainModelPackage.getExpression());
    memberSelectionExpressionEClass.getESuperTypes().add(theDomainModelPackage.getExpression());
    staticEntityRefEClass.getESuperTypes().add(this.getAtomExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(mappingModelEClass, MappingModel.class, "MappingModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMappingModel_Mappers(), this.getMapper(), null, "mappers", null, 0, -1, MappingModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mapperEClass, Mapper.class, "Mapper", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMapper_Name(), ecorePackage.getEString(), "name", null, 0, 1, Mapper.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMapper_Dto(), theDTOPackage.getDTOClass(), null, "dto", null, 0, 1, Mapper.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMapper_Attributes(), this.getMappedAttribute(), null, "attributes", null, 0, -1, Mapper.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mappedAttributeEClass, MappedAttribute.class, "MappedAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMappedAttribute_Attr(), theDomainModelPackage.getAttribute(), null, "attr", null, 0, 1, MappedAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMappedAttribute_Mapping(), theDomainModelPackage.getExpression(), null, "mapping", null, 0, 1, MappedAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entityMappingExpressionEClass, EntityMappingExpression.class, "EntityMappingExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEntityMappingExpression_MappedEntity(), theDomainModelPackage.getExpression(), null, "mappedEntity", null, 0, 1, EntityMappingExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityMappingExpression_Mapper(), this.getMapper(), null, "mapper", null, 0, 1, EntityMappingExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(atomExpressionEClass, AtomExpression.class, "AtomExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(memberSelectionExpressionEClass, MemberSelectionExpression.class, "MemberSelectionExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMemberSelectionExpression_Receiver(), theDomainModelPackage.getExpression(), null, "receiver", null, 0, 1, MemberSelectionExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMemberSelectionExpression_Member(), theDomainModelPackage.getAttribute(), null, "member", null, 0, 1, MemberSelectionExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(staticEntityRefEClass, StaticEntityRef.class, "StaticEntityRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getStaticEntityRef_Reference(), theDomainModelPackage.getEntity(), null, "reference", null, 0, 1, StaticEntityRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //DomainToDTOPackageImpl
